// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: capsule.proto

#ifndef PROTOBUF_INCLUDED_capsule_2eproto
#define PROTOBUF_INCLUDED_capsule_2eproto

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3006001
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
#define PROTOBUF_INTERNAL_EXPORT_protobuf_capsule_2eproto 

namespace protobuf_capsule_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[2];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
}  // namespace protobuf_capsule_2eproto
namespace capsule {
class CapsuleHeader;
class CapsuleHeaderDefaultTypeInternal;
extern CapsuleHeaderDefaultTypeInternal _CapsuleHeader_default_instance_;
class CapsulePDU;
class CapsulePDUDefaultTypeInternal;
extern CapsulePDUDefaultTypeInternal _CapsulePDU_default_instance_;
}  // namespace capsule
namespace google {
namespace protobuf {
template<> ::capsule::CapsuleHeader* Arena::CreateMaybeMessage<::capsule::CapsuleHeader>(Arena*);
template<> ::capsule::CapsulePDU* Arena::CreateMaybeMessage<::capsule::CapsulePDU>(Arena*);
}  // namespace protobuf
}  // namespace google
namespace capsule {

// ===================================================================

class CapsuleHeader : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:capsule.CapsuleHeader) */ {
 public:
  CapsuleHeader();
  virtual ~CapsuleHeader();

  CapsuleHeader(const CapsuleHeader& from);

  inline CapsuleHeader& operator=(const CapsuleHeader& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CapsuleHeader(CapsuleHeader&& from) noexcept
    : CapsuleHeader() {
    *this = ::std::move(from);
  }

  inline CapsuleHeader& operator=(CapsuleHeader&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const CapsuleHeader& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CapsuleHeader* internal_default_instance() {
    return reinterpret_cast<const CapsuleHeader*>(
               &_CapsuleHeader_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void Swap(CapsuleHeader* other);
  friend void swap(CapsuleHeader& a, CapsuleHeader& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CapsuleHeader* New() const final {
    return CreateMaybeMessage<CapsuleHeader>(NULL);
  }

  CapsuleHeader* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CapsuleHeader>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CapsuleHeader& from);
  void MergeFrom(const CapsuleHeader& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CapsuleHeader* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated bytes prevHash = 2;
  int prevhash_size() const;
  void clear_prevhash();
  static const int kPrevHashFieldNumber = 2;
  const ::std::string& prevhash(int index) const;
  ::std::string* mutable_prevhash(int index);
  void set_prevhash(int index, const ::std::string& value);
  #if LANG_CXX11
  void set_prevhash(int index, ::std::string&& value);
  #endif
  void set_prevhash(int index, const char* value);
  void set_prevhash(int index, const void* value, size_t size);
  ::std::string* add_prevhash();
  void add_prevhash(const ::std::string& value);
  #if LANG_CXX11
  void add_prevhash(::std::string&& value);
  #endif
  void add_prevhash(const char* value);
  void add_prevhash(const void* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& prevhash() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_prevhash();

  // bytes hash = 3;
  void clear_hash();
  static const int kHashFieldNumber = 3;
  const ::std::string& hash() const;
  void set_hash(const ::std::string& value);
  #if LANG_CXX11
  void set_hash(::std::string&& value);
  #endif
  void set_hash(const char* value);
  void set_hash(const void* value, size_t size);
  ::std::string* mutable_hash();
  ::std::string* release_hash();
  void set_allocated_hash(::std::string* hash);

  // string msgType = 8;
  void clear_msgtype();
  static const int kMsgTypeFieldNumber = 8;
  const ::std::string& msgtype() const;
  void set_msgtype(const ::std::string& value);
  #if LANG_CXX11
  void set_msgtype(::std::string&& value);
  #endif
  void set_msgtype(const char* value);
  void set_msgtype(const char* value, size_t size);
  ::std::string* mutable_msgtype();
  ::std::string* release_msgtype();
  void set_allocated_msgtype(::std::string* msgtype);

  // string replyAddr = 10;
  void clear_replyaddr();
  static const int kReplyAddrFieldNumber = 10;
  const ::std::string& replyaddr() const;
  void set_replyaddr(const ::std::string& value);
  #if LANG_CXX11
  void set_replyaddr(::std::string&& value);
  #endif
  void set_replyaddr(const char* value);
  void set_replyaddr(const char* value, size_t size);
  ::std::string* mutable_replyaddr();
  ::std::string* release_replyaddr();
  void set_allocated_replyaddr(::std::string* replyaddr);

  // string appMeta = 11;
  void clear_appmeta();
  static const int kAppMetaFieldNumber = 11;
  const ::std::string& appmeta() const;
  void set_appmeta(const ::std::string& value);
  #if LANG_CXX11
  void set_appmeta(::std::string&& value);
  #endif
  void set_appmeta(const char* value);
  void set_appmeta(const char* value, size_t size);
  ::std::string* mutable_appmeta();
  ::std::string* release_appmeta();
  void set_allocated_appmeta(::std::string* appmeta);

  // int64 sender = 1;
  void clear_sender();
  static const int kSenderFieldNumber = 1;
  ::google::protobuf::int64 sender() const;
  void set_sender(::google::protobuf::int64 value);

  // int64 timestamp = 6;
  void clear_timestamp();
  static const int kTimestampFieldNumber = 6;
  ::google::protobuf::int64 timestamp() const;
  void set_timestamp(::google::protobuf::int64 value);

  // int64 last_logical_timestamp = 7;
  void clear_last_logical_timestamp();
  static const int kLastLogicalTimestampFieldNumber = 7;
  ::google::protobuf::int64 last_logical_timestamp() const;
  void set_last_logical_timestamp(::google::protobuf::int64 value);

  // int64 msgLen = 9;
  void clear_msglen();
  static const int kMsgLenFieldNumber = 9;
  ::google::protobuf::int64 msglen() const;
  void set_msglen(::google::protobuf::int64 value);

  // bool verified = 4001;
  void clear_verified();
  static const int kVerifiedFieldNumber = 4001;
  bool verified() const;
  void set_verified(bool value);

  // @@protoc_insertion_point(class_scope:capsule.CapsuleHeader)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::std::string> prevhash_;
  ::google::protobuf::internal::ArenaStringPtr hash_;
  ::google::protobuf::internal::ArenaStringPtr msgtype_;
  ::google::protobuf::internal::ArenaStringPtr replyaddr_;
  ::google::protobuf::internal::ArenaStringPtr appmeta_;
  ::google::protobuf::int64 sender_;
  ::google::protobuf::int64 timestamp_;
  ::google::protobuf::int64 last_logical_timestamp_;
  ::google::protobuf::int64 msglen_;
  bool verified_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_capsule_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CapsulePDU : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:capsule.CapsulePDU) */ {
 public:
  CapsulePDU();
  virtual ~CapsulePDU();

  CapsulePDU(const CapsulePDU& from);

  inline CapsulePDU& operator=(const CapsulePDU& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CapsulePDU(CapsulePDU&& from) noexcept
    : CapsulePDU() {
    *this = ::std::move(from);
  }

  inline CapsulePDU& operator=(CapsulePDU&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const CapsulePDU& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CapsulePDU* internal_default_instance() {
    return reinterpret_cast<const CapsulePDU*>(
               &_CapsulePDU_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  void Swap(CapsulePDU* other);
  friend void swap(CapsulePDU& a, CapsulePDU& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CapsulePDU* New() const final {
    return CreateMaybeMessage<CapsulePDU>(NULL);
  }

  CapsulePDU* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CapsulePDU>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CapsulePDU& from);
  void MergeFrom(const CapsulePDU& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CapsulePDU* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // bytes header_hash = 2;
  void clear_header_hash();
  static const int kHeaderHashFieldNumber = 2;
  const ::std::string& header_hash() const;
  void set_header_hash(const ::std::string& value);
  #if LANG_CXX11
  void set_header_hash(::std::string&& value);
  #endif
  void set_header_hash(const char* value);
  void set_header_hash(const void* value, size_t size);
  ::std::string* mutable_header_hash();
  ::std::string* release_header_hash();
  void set_allocated_header_hash(::std::string* header_hash);

  // bytes signature = 3;
  void clear_signature();
  static const int kSignatureFieldNumber = 3;
  const ::std::string& signature() const;
  void set_signature(const ::std::string& value);
  #if LANG_CXX11
  void set_signature(::std::string&& value);
  #endif
  void set_signature(const char* value);
  void set_signature(const void* value, size_t size);
  ::std::string* mutable_signature();
  ::std::string* release_signature();
  void set_allocated_signature(::std::string* signature);

  // bytes payload_in_transit = 5;
  void clear_payload_in_transit();
  static const int kPayloadInTransitFieldNumber = 5;
  const ::std::string& payload_in_transit() const;
  void set_payload_in_transit(const ::std::string& value);
  #if LANG_CXX11
  void set_payload_in_transit(::std::string&& value);
  #endif
  void set_payload_in_transit(const char* value);
  void set_payload_in_transit(const void* value, size_t size);
  ::std::string* mutable_payload_in_transit();
  ::std::string* release_payload_in_transit();
  void set_allocated_payload_in_transit(::std::string* payload_in_transit);

  // .capsule.CapsuleHeader header = 1;
  bool has_header() const;
  void clear_header();
  static const int kHeaderFieldNumber = 1;
  private:
  const ::capsule::CapsuleHeader& _internal_header() const;
  public:
  const ::capsule::CapsuleHeader& header() const;
  ::capsule::CapsuleHeader* release_header();
  ::capsule::CapsuleHeader* mutable_header();
  void set_allocated_header(::capsule::CapsuleHeader* header);

  // int64 signature_len = 4;
  void clear_signature_len();
  static const int kSignatureLenFieldNumber = 4;
  ::google::protobuf::int64 signature_len() const;
  void set_signature_len(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:capsule.CapsulePDU)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr header_hash_;
  ::google::protobuf::internal::ArenaStringPtr signature_;
  ::google::protobuf::internal::ArenaStringPtr payload_in_transit_;
  ::capsule::CapsuleHeader* header_;
  ::google::protobuf::int64 signature_len_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_capsule_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// CapsuleHeader

// int64 sender = 1;
inline void CapsuleHeader::clear_sender() {
  sender_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 CapsuleHeader::sender() const {
  // @@protoc_insertion_point(field_get:capsule.CapsuleHeader.sender)
  return sender_;
}
inline void CapsuleHeader::set_sender(::google::protobuf::int64 value) {
  
  sender_ = value;
  // @@protoc_insertion_point(field_set:capsule.CapsuleHeader.sender)
}

// repeated bytes prevHash = 2;
inline int CapsuleHeader::prevhash_size() const {
  return prevhash_.size();
}
inline void CapsuleHeader::clear_prevhash() {
  prevhash_.Clear();
}
inline const ::std::string& CapsuleHeader::prevhash(int index) const {
  // @@protoc_insertion_point(field_get:capsule.CapsuleHeader.prevHash)
  return prevhash_.Get(index);
}
inline ::std::string* CapsuleHeader::mutable_prevhash(int index) {
  // @@protoc_insertion_point(field_mutable:capsule.CapsuleHeader.prevHash)
  return prevhash_.Mutable(index);
}
inline void CapsuleHeader::set_prevhash(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:capsule.CapsuleHeader.prevHash)
  prevhash_.Mutable(index)->assign(value);
}
#if LANG_CXX11
inline void CapsuleHeader::set_prevhash(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:capsule.CapsuleHeader.prevHash)
  prevhash_.Mutable(index)->assign(std::move(value));
}
#endif
inline void CapsuleHeader::set_prevhash(int index, const char* value) {
  GOOGLE_DCHECK(value != NULL);
  prevhash_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:capsule.CapsuleHeader.prevHash)
}
inline void CapsuleHeader::set_prevhash(int index, const void* value, size_t size) {
  prevhash_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:capsule.CapsuleHeader.prevHash)
}
inline ::std::string* CapsuleHeader::add_prevhash() {
  // @@protoc_insertion_point(field_add_mutable:capsule.CapsuleHeader.prevHash)
  return prevhash_.Add();
}
inline void CapsuleHeader::add_prevhash(const ::std::string& value) {
  prevhash_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:capsule.CapsuleHeader.prevHash)
}
#if LANG_CXX11
inline void CapsuleHeader::add_prevhash(::std::string&& value) {
  prevhash_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:capsule.CapsuleHeader.prevHash)
}
#endif
inline void CapsuleHeader::add_prevhash(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  prevhash_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:capsule.CapsuleHeader.prevHash)
}
inline void CapsuleHeader::add_prevhash(const void* value, size_t size) {
  prevhash_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:capsule.CapsuleHeader.prevHash)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
CapsuleHeader::prevhash() const {
  // @@protoc_insertion_point(field_list:capsule.CapsuleHeader.prevHash)
  return prevhash_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
CapsuleHeader::mutable_prevhash() {
  // @@protoc_insertion_point(field_mutable_list:capsule.CapsuleHeader.prevHash)
  return &prevhash_;
}

// bytes hash = 3;
inline void CapsuleHeader::clear_hash() {
  hash_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CapsuleHeader::hash() const {
  // @@protoc_insertion_point(field_get:capsule.CapsuleHeader.hash)
  return hash_.GetNoArena();
}
inline void CapsuleHeader::set_hash(const ::std::string& value) {
  
  hash_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:capsule.CapsuleHeader.hash)
}
#if LANG_CXX11
inline void CapsuleHeader::set_hash(::std::string&& value) {
  
  hash_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:capsule.CapsuleHeader.hash)
}
#endif
inline void CapsuleHeader::set_hash(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  hash_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:capsule.CapsuleHeader.hash)
}
inline void CapsuleHeader::set_hash(const void* value, size_t size) {
  
  hash_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:capsule.CapsuleHeader.hash)
}
inline ::std::string* CapsuleHeader::mutable_hash() {
  
  // @@protoc_insertion_point(field_mutable:capsule.CapsuleHeader.hash)
  return hash_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CapsuleHeader::release_hash() {
  // @@protoc_insertion_point(field_release:capsule.CapsuleHeader.hash)
  
  return hash_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CapsuleHeader::set_allocated_hash(::std::string* hash) {
  if (hash != NULL) {
    
  } else {
    
  }
  hash_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), hash);
  // @@protoc_insertion_point(field_set_allocated:capsule.CapsuleHeader.hash)
}

// int64 timestamp = 6;
inline void CapsuleHeader::clear_timestamp() {
  timestamp_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 CapsuleHeader::timestamp() const {
  // @@protoc_insertion_point(field_get:capsule.CapsuleHeader.timestamp)
  return timestamp_;
}
inline void CapsuleHeader::set_timestamp(::google::protobuf::int64 value) {
  
  timestamp_ = value;
  // @@protoc_insertion_point(field_set:capsule.CapsuleHeader.timestamp)
}

// int64 last_logical_timestamp = 7;
inline void CapsuleHeader::clear_last_logical_timestamp() {
  last_logical_timestamp_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 CapsuleHeader::last_logical_timestamp() const {
  // @@protoc_insertion_point(field_get:capsule.CapsuleHeader.last_logical_timestamp)
  return last_logical_timestamp_;
}
inline void CapsuleHeader::set_last_logical_timestamp(::google::protobuf::int64 value) {
  
  last_logical_timestamp_ = value;
  // @@protoc_insertion_point(field_set:capsule.CapsuleHeader.last_logical_timestamp)
}

// string msgType = 8;
inline void CapsuleHeader::clear_msgtype() {
  msgtype_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CapsuleHeader::msgtype() const {
  // @@protoc_insertion_point(field_get:capsule.CapsuleHeader.msgType)
  return msgtype_.GetNoArena();
}
inline void CapsuleHeader::set_msgtype(const ::std::string& value) {
  
  msgtype_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:capsule.CapsuleHeader.msgType)
}
#if LANG_CXX11
inline void CapsuleHeader::set_msgtype(::std::string&& value) {
  
  msgtype_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:capsule.CapsuleHeader.msgType)
}
#endif
inline void CapsuleHeader::set_msgtype(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  msgtype_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:capsule.CapsuleHeader.msgType)
}
inline void CapsuleHeader::set_msgtype(const char* value, size_t size) {
  
  msgtype_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:capsule.CapsuleHeader.msgType)
}
inline ::std::string* CapsuleHeader::mutable_msgtype() {
  
  // @@protoc_insertion_point(field_mutable:capsule.CapsuleHeader.msgType)
  return msgtype_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CapsuleHeader::release_msgtype() {
  // @@protoc_insertion_point(field_release:capsule.CapsuleHeader.msgType)
  
  return msgtype_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CapsuleHeader::set_allocated_msgtype(::std::string* msgtype) {
  if (msgtype != NULL) {
    
  } else {
    
  }
  msgtype_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), msgtype);
  // @@protoc_insertion_point(field_set_allocated:capsule.CapsuleHeader.msgType)
}

// int64 msgLen = 9;
inline void CapsuleHeader::clear_msglen() {
  msglen_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 CapsuleHeader::msglen() const {
  // @@protoc_insertion_point(field_get:capsule.CapsuleHeader.msgLen)
  return msglen_;
}
inline void CapsuleHeader::set_msglen(::google::protobuf::int64 value) {
  
  msglen_ = value;
  // @@protoc_insertion_point(field_set:capsule.CapsuleHeader.msgLen)
}

// string replyAddr = 10;
inline void CapsuleHeader::clear_replyaddr() {
  replyaddr_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CapsuleHeader::replyaddr() const {
  // @@protoc_insertion_point(field_get:capsule.CapsuleHeader.replyAddr)
  return replyaddr_.GetNoArena();
}
inline void CapsuleHeader::set_replyaddr(const ::std::string& value) {
  
  replyaddr_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:capsule.CapsuleHeader.replyAddr)
}
#if LANG_CXX11
inline void CapsuleHeader::set_replyaddr(::std::string&& value) {
  
  replyaddr_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:capsule.CapsuleHeader.replyAddr)
}
#endif
inline void CapsuleHeader::set_replyaddr(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  replyaddr_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:capsule.CapsuleHeader.replyAddr)
}
inline void CapsuleHeader::set_replyaddr(const char* value, size_t size) {
  
  replyaddr_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:capsule.CapsuleHeader.replyAddr)
}
inline ::std::string* CapsuleHeader::mutable_replyaddr() {
  
  // @@protoc_insertion_point(field_mutable:capsule.CapsuleHeader.replyAddr)
  return replyaddr_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CapsuleHeader::release_replyaddr() {
  // @@protoc_insertion_point(field_release:capsule.CapsuleHeader.replyAddr)
  
  return replyaddr_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CapsuleHeader::set_allocated_replyaddr(::std::string* replyaddr) {
  if (replyaddr != NULL) {
    
  } else {
    
  }
  replyaddr_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), replyaddr);
  // @@protoc_insertion_point(field_set_allocated:capsule.CapsuleHeader.replyAddr)
}

// string appMeta = 11;
inline void CapsuleHeader::clear_appmeta() {
  appmeta_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CapsuleHeader::appmeta() const {
  // @@protoc_insertion_point(field_get:capsule.CapsuleHeader.appMeta)
  return appmeta_.GetNoArena();
}
inline void CapsuleHeader::set_appmeta(const ::std::string& value) {
  
  appmeta_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:capsule.CapsuleHeader.appMeta)
}
#if LANG_CXX11
inline void CapsuleHeader::set_appmeta(::std::string&& value) {
  
  appmeta_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:capsule.CapsuleHeader.appMeta)
}
#endif
inline void CapsuleHeader::set_appmeta(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  appmeta_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:capsule.CapsuleHeader.appMeta)
}
inline void CapsuleHeader::set_appmeta(const char* value, size_t size) {
  
  appmeta_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:capsule.CapsuleHeader.appMeta)
}
inline ::std::string* CapsuleHeader::mutable_appmeta() {
  
  // @@protoc_insertion_point(field_mutable:capsule.CapsuleHeader.appMeta)
  return appmeta_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CapsuleHeader::release_appmeta() {
  // @@protoc_insertion_point(field_release:capsule.CapsuleHeader.appMeta)
  
  return appmeta_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CapsuleHeader::set_allocated_appmeta(::std::string* appmeta) {
  if (appmeta != NULL) {
    
  } else {
    
  }
  appmeta_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), appmeta);
  // @@protoc_insertion_point(field_set_allocated:capsule.CapsuleHeader.appMeta)
}

// bool verified = 4001;
inline void CapsuleHeader::clear_verified() {
  verified_ = false;
}
inline bool CapsuleHeader::verified() const {
  // @@protoc_insertion_point(field_get:capsule.CapsuleHeader.verified)
  return verified_;
}
inline void CapsuleHeader::set_verified(bool value) {
  
  verified_ = value;
  // @@protoc_insertion_point(field_set:capsule.CapsuleHeader.verified)
}

// -------------------------------------------------------------------

// CapsulePDU

// .capsule.CapsuleHeader header = 1;
inline bool CapsulePDU::has_header() const {
  return this != internal_default_instance() && header_ != NULL;
}
inline void CapsulePDU::clear_header() {
  if (GetArenaNoVirtual() == NULL && header_ != NULL) {
    delete header_;
  }
  header_ = NULL;
}
inline const ::capsule::CapsuleHeader& CapsulePDU::_internal_header() const {
  return *header_;
}
inline const ::capsule::CapsuleHeader& CapsulePDU::header() const {
  const ::capsule::CapsuleHeader* p = header_;
  // @@protoc_insertion_point(field_get:capsule.CapsulePDU.header)
  return p != NULL ? *p : *reinterpret_cast<const ::capsule::CapsuleHeader*>(
      &::capsule::_CapsuleHeader_default_instance_);
}
inline ::capsule::CapsuleHeader* CapsulePDU::release_header() {
  // @@protoc_insertion_point(field_release:capsule.CapsulePDU.header)
  
  ::capsule::CapsuleHeader* temp = header_;
  header_ = NULL;
  return temp;
}
inline ::capsule::CapsuleHeader* CapsulePDU::mutable_header() {
  
  if (header_ == NULL) {
    auto* p = CreateMaybeMessage<::capsule::CapsuleHeader>(GetArenaNoVirtual());
    header_ = p;
  }
  // @@protoc_insertion_point(field_mutable:capsule.CapsulePDU.header)
  return header_;
}
inline void CapsulePDU::set_allocated_header(::capsule::CapsuleHeader* header) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete header_;
  }
  if (header) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      header = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, header, submessage_arena);
    }
    
  } else {
    
  }
  header_ = header;
  // @@protoc_insertion_point(field_set_allocated:capsule.CapsulePDU.header)
}

// bytes header_hash = 2;
inline void CapsulePDU::clear_header_hash() {
  header_hash_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CapsulePDU::header_hash() const {
  // @@protoc_insertion_point(field_get:capsule.CapsulePDU.header_hash)
  return header_hash_.GetNoArena();
}
inline void CapsulePDU::set_header_hash(const ::std::string& value) {
  
  header_hash_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:capsule.CapsulePDU.header_hash)
}
#if LANG_CXX11
inline void CapsulePDU::set_header_hash(::std::string&& value) {
  
  header_hash_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:capsule.CapsulePDU.header_hash)
}
#endif
inline void CapsulePDU::set_header_hash(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  header_hash_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:capsule.CapsulePDU.header_hash)
}
inline void CapsulePDU::set_header_hash(const void* value, size_t size) {
  
  header_hash_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:capsule.CapsulePDU.header_hash)
}
inline ::std::string* CapsulePDU::mutable_header_hash() {
  
  // @@protoc_insertion_point(field_mutable:capsule.CapsulePDU.header_hash)
  return header_hash_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CapsulePDU::release_header_hash() {
  // @@protoc_insertion_point(field_release:capsule.CapsulePDU.header_hash)
  
  return header_hash_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CapsulePDU::set_allocated_header_hash(::std::string* header_hash) {
  if (header_hash != NULL) {
    
  } else {
    
  }
  header_hash_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), header_hash);
  // @@protoc_insertion_point(field_set_allocated:capsule.CapsulePDU.header_hash)
}

// bytes signature = 3;
inline void CapsulePDU::clear_signature() {
  signature_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CapsulePDU::signature() const {
  // @@protoc_insertion_point(field_get:capsule.CapsulePDU.signature)
  return signature_.GetNoArena();
}
inline void CapsulePDU::set_signature(const ::std::string& value) {
  
  signature_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:capsule.CapsulePDU.signature)
}
#if LANG_CXX11
inline void CapsulePDU::set_signature(::std::string&& value) {
  
  signature_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:capsule.CapsulePDU.signature)
}
#endif
inline void CapsulePDU::set_signature(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  signature_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:capsule.CapsulePDU.signature)
}
inline void CapsulePDU::set_signature(const void* value, size_t size) {
  
  signature_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:capsule.CapsulePDU.signature)
}
inline ::std::string* CapsulePDU::mutable_signature() {
  
  // @@protoc_insertion_point(field_mutable:capsule.CapsulePDU.signature)
  return signature_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CapsulePDU::release_signature() {
  // @@protoc_insertion_point(field_release:capsule.CapsulePDU.signature)
  
  return signature_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CapsulePDU::set_allocated_signature(::std::string* signature) {
  if (signature != NULL) {
    
  } else {
    
  }
  signature_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), signature);
  // @@protoc_insertion_point(field_set_allocated:capsule.CapsulePDU.signature)
}

// int64 signature_len = 4;
inline void CapsulePDU::clear_signature_len() {
  signature_len_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 CapsulePDU::signature_len() const {
  // @@protoc_insertion_point(field_get:capsule.CapsulePDU.signature_len)
  return signature_len_;
}
inline void CapsulePDU::set_signature_len(::google::protobuf::int64 value) {
  
  signature_len_ = value;
  // @@protoc_insertion_point(field_set:capsule.CapsulePDU.signature_len)
}

// bytes payload_in_transit = 5;
inline void CapsulePDU::clear_payload_in_transit() {
  payload_in_transit_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CapsulePDU::payload_in_transit() const {
  // @@protoc_insertion_point(field_get:capsule.CapsulePDU.payload_in_transit)
  return payload_in_transit_.GetNoArena();
}
inline void CapsulePDU::set_payload_in_transit(const ::std::string& value) {
  
  payload_in_transit_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:capsule.CapsulePDU.payload_in_transit)
}
#if LANG_CXX11
inline void CapsulePDU::set_payload_in_transit(::std::string&& value) {
  
  payload_in_transit_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:capsule.CapsulePDU.payload_in_transit)
}
#endif
inline void CapsulePDU::set_payload_in_transit(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  payload_in_transit_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:capsule.CapsulePDU.payload_in_transit)
}
inline void CapsulePDU::set_payload_in_transit(const void* value, size_t size) {
  
  payload_in_transit_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:capsule.CapsulePDU.payload_in_transit)
}
inline ::std::string* CapsulePDU::mutable_payload_in_transit() {
  
  // @@protoc_insertion_point(field_mutable:capsule.CapsulePDU.payload_in_transit)
  return payload_in_transit_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CapsulePDU::release_payload_in_transit() {
  // @@protoc_insertion_point(field_release:capsule.CapsulePDU.payload_in_transit)
  
  return payload_in_transit_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CapsulePDU::set_allocated_payload_in_transit(::std::string* payload_in_transit) {
  if (payload_in_transit != NULL) {
    
  } else {
    
  }
  payload_in_transit_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), payload_in_transit);
  // @@protoc_insertion_point(field_set_allocated:capsule.CapsulePDU.payload_in_transit)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace capsule

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_INCLUDED_capsule_2eproto
